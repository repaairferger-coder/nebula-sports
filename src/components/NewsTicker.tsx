import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  Dimensions,
} from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { Ionicons } from '@expo/vector-icons';
import * as Animatable from 'react-native-animatable';

import { NewsItem } from '@/types';
import { SPACE_THEME } from '@/constants';
import { formatTime } from '@/utils';

const { width } = Dimensions.get('window');

interface NewsTickerProps {
  onNewsPress?: (news: NewsItem) => void;
}

const NewsTicker: React.FC<NewsTickerProps> = ({ onNewsPress }) => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [newsItems, setNewsItems] = useState<NewsItem[]>([]);

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–µ–π
  useEffect(() => {
    const mockNews: NewsItem[] = [
      {
        id: '1',
        title: 'üèÜ –ß–µ–º–ø–∏–æ–Ω–∞—Ç –º–∏—Ä–∞ –ø–æ —Ñ—É—Ç–±–æ–ª—É: —Ñ–∏–Ω–∞–ª —Å–µ–≥–æ–¥–Ω—è –≤ 21:00',
        content: '–ë—Ä–∞–∑–∏–ª–∏—è –ø—Ä–æ—Ç–∏–≤ –ê—Ä–≥–µ–Ω—Ç–∏–Ω—ã –≤ —Ñ–∏–Ω–∞–ª–µ —á–µ–º–ø–∏–æ–Ω–∞—Ç–∞ –º–∏—Ä–∞',
        sport: 'football',
        priority: 'high',
        isAd: false,
        publishedAt: new Date(),
      },
      {
        id: '2',
        title: 'ü•ä –ë–æ–π –∑–∞ —Ç–∏—Ç—É–ª —á–µ–º–ø–∏–æ–Ω–∞ UFC: –î–∂–æ–Ω—Å –ø—Ä–æ—Ç–∏–≤ –ú–∏–æ—á–∏—á–∞',
        content: '–ì–ª–∞–≤–Ω—ã–π –±–æ–π –≤–µ—á–µ—Ä–∞ –≤ 23:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏',
        sport: 'mma',
        priority: 'high',
        isAd: false,
        publishedAt: new Date(),
      },
      {
        id: '3',
        title: 'üéØ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: Premium –ø–æ–¥–ø–∏—Å–∫–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π 50%',
        content: '–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º VR —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è–º –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ',
        sport: 'football',
        priority: 'medium',
        isAd: true,
        adUrl: 'https://nebula-sports.com/premium',
        publishedAt: new Date(),
      },
      {
        id: '4',
        title: 'üèÄ NBA: –õ–µ–π–∫–µ—Ä—Å –ø—Ä–æ—Ç–∏–≤ –£–æ—Ä—Ä–∏–æ—Ä–∑ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ',
        content: '–°–º–æ—Ç—Ä–∏—Ç–µ –º–∞—Ç—á —Å AI-–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ VR —Ä–µ–∂–∏–º–æ–º',
        sport: 'basketball',
        priority: 'medium',
        isAd: false,
        publishedAt: new Date(),
      },
    ];
    setNewsItems(mockNews);
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
  useEffect(() => {
    if (newsItems.length === 0) return;

    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % newsItems.length);
    }, 5000); // –°–º–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

    return () => clearInterval(interval);
  }, [newsItems.length]);

  const handleNewsPress = (news: NewsItem) => {
    if (onNewsPress) {
      onNewsPress(news);
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high':
        return SPACE_THEME.colors.error;
      case 'medium':
        return SPACE_THEME.colors.warning;
      default:
        return SPACE_THEME.colors.info;
    }
  };

  if (newsItems.length === 0) {
    return null;
  }

  const currentNews = newsItems[currentIndex];

  return (
    <View style={styles.container}>
      <LinearGradient
        colors={SPACE_THEME.gradients.space}
        style={styles.gradient}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 0 }}
      >
        <View style={styles.content}>
          {/* –ò–∫–æ–Ω–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π */}
          <View style={styles.iconContainer}>
            <Ionicons 
              name="newspaper" 
              size={16} 
              color={SPACE_THEME.colors.highlight} 
            />
          </View>

          {/* –¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ */}
          <TouchableOpacity
            style={styles.newsContainer}
            onPress={() => handleNewsPress(currentNews)}
            activeOpacity={0.7}
          >
            <Animatable.Text
              animation="fadeIn"
              duration={500}
              key={currentNews.id}
              style={[
                styles.newsText,
                { color: currentNews.isAd ? SPACE_THEME.colors.highlight : SPACE_THEME.colors.text }
              ]}
              numberOfLines={1}
            >
              {currentNews.title}
            </Animatable.Text>
          </TouchableOpacity>

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ */}
          <View
            style={[
              styles.priorityIndicator,
              { backgroundColor: getPriorityColor(currentNews.priority) }
            ]}
          />

          {/* –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
          <Text style={styles.timeText}>
            {formatTime(currentNews.publishedAt)}
          </Text>

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–æ–≤–æ—Å—Ç–µ–π */}
          <View style={styles.indicators}>
            {newsItems.map((_, index) => (
              <View
                key={index}
                style={[
                  styles.indicator,
                  {
                    backgroundColor: index === currentIndex 
                      ? SPACE_THEME.colors.highlight 
                      : SPACE_THEME.colors.textSecondary
                  }
                ]}
              />
            ))}
          </View>
        </View>
      </LinearGradient>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    height: 40,
    backgroundColor: SPACE_THEME.colors.primary,
  },
  gradient: {
    flex: 1,
    justifyContent: 'center',
  },
  content: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    height: '100%',
  },
  iconContainer: {
    marginRight: 12,
    justifyContent: 'center',
    alignItems: 'center',
  },
  newsContainer: {
    flex: 1,
    marginRight: 12,
  },
  newsText: {
    fontSize: 14,
    fontWeight: '600',
    color: SPACE_THEME.colors.text,
  },
  priorityIndicator: {
    width: 6,
    height: 6,
    borderRadius: 3,
    marginRight: 12,
  },
  timeText: {
    fontSize: 12,
    color: SPACE_THEME.colors.textSecondary,
    marginRight: 12,
  },
  indicators: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  indicator: {
    width: 4,
    height: 4,
    borderRadius: 2,
    marginHorizontal: 2,
  },
});

export default NewsTicker;
